#include <iostream>
#include <vector>
#include <string>

using namespace std;
struct Task {
    string description;
    bool completed;

    Task(string desc) : description(desc), completed(false) {}
};
void addTask(vector<Task> &tasks, const string &description) {
    tasks.push_back(Task(description));
    cout << "Task added successfully!\n";
}
void viewTasks(const vector<Task> &tasks) {
    cout << "Tasks:\n";
    for (size_t i = 0; i < tasks.size(); ++i) {
        cout << i + 1 << ". " << tasks[i].description << " - "
             << (tasks[i].completed ? "Completed" : "Pending") << endl;
    }
}
void markCompleted(vector<Task> &tasks, int index) {
    if (index >= 0 && index < tasks.size()) {
        tasks[index].completed = true;
        cout << "Task marked as completed!\n";
    } else {
        cout << "Invalid task index!\n";
    }
}
void removeTask(vector<Task> &tasks, int index) {
    if (index >= 0 && index < tasks.size()) {
        tasks.erase(tasks.begin() + index);
        cout << "Task removed successfully!\n";
    } else {
        cout << "Invalid task index!\n";
    }
}
int main() {
    vector<Task> tasks;
    int choice;
    string taskDescription;
    do {
        cout << "\n1. Add Task\n2. View Tasks\n3. Mark Task as Completed\n4. Remove Task\n5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter task: ";
                cin.ignore();
                getline(cin, taskDescription);
                addTask(tasks, taskDescription);
                break;
            case 2:
                viewTasks(tasks);
                break;
            case 3:
                int index;
                cout << "Enter index of task to mark as completed: ";
                cin >> index;
                markCompleted(tasks, index - 1);
                break;
            case 4:
                int removeIndex;
                cout << "Enter index of task to remove: ";
                cin >> removeIndex;
                removeTask(tasks, removeIndex - 1);
                break;
            case 5:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 5);
    return 0;
}
